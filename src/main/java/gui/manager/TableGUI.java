/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.manager;

import bus.*;
import gui.custom.TableDesign;
import model.*;
import gui.*;

import java.lang.Exception;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

import model.enums.TableStatusEnum;
import util.NumberUltis;

/**
 *
 * @author ACER
 */
public class TableGUI extends javax.swing.JPanel {

    private TableDesign tableDesign;
    private TableColumnModel columnModel;
    private DefaultTableModel tableModel;
    private TableBUS tableBUS;
    private FloorBUS floorBUS;
    private TableEntity tbl;

    /**
     * Creates new form TableGUI
     */
    public TableGUI() throws Exception {
        tableBUS = FormLoad.tableBUS;
        floorBUS = FormLoad.floorBUS;
        tbl = new TableEntity();
        initComponents();
    }

    private void customTable() throws Exception {
        String[] headers = {"Mã bàn", "Mã tầng", "Tên bàn", "Sức chứa", "Trạng thái"};
        List<Integer> tableWidth = Arrays.asList(100, 100, 100, 100, 100);
        tableDesign = new TableDesign(headers, tableWidth);
        table = tableDesign.getTable();
        table.setRowHeight(50);
        tableModel = tableDesign.getModelTable();
        columnModel = tableDesign.getColumnModel();
        loadData();

    }

    private void loadData() throws Exception {
        tableModel.setRowCount(0);
        List<TableEntity> tabs = tableBUS.getAllEntities();
        floorBUS.getAllEntities().forEach(x -> cbbFloor.addItem(x.getName()));
        for (TableEntity tab : tabs) {
            addOneLine(tab);
        }
    }
    
    private void addOneLine(TableEntity tab) {
        tableModel.addRow(new Object[]{tab.getTableId(), tab.getFloor().getFloorId(), tab.getName(), 
            tab.getCapacity(), tab.getTableStatus()});
    }
    private void clear() {
        txtName.setText("");
        txtCapacity.setText("");
    }
    
    private TableEntity getTable() throws Exception {
        String capacityStr = txtCapacity.getText();
        String name = txtName.getText();
        String floorStr = cbbFloor.getSelectedItem().toString();
        
        //check 
        int capacity = 1;
        if(NumberUltis.isInt(capacityStr)) {
            capacity = Integer.parseInt(capacityStr);
        }
        
        return new TableEntity(name, capacity, TableStatusEnum.AVAILABLE, floorBUS.findByName(floorStr));
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws Exception {

        panelInfo = new javax.swing.JPanel();
        panelImgTbl = new javax.swing.JPanel();
        lblImgTbl = new javax.swing.JLabel();
        panelDetailInfo = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblSpace = new javax.swing.JLabel();
        txtCapacity = new javax.swing.JTextField();
        panelEdit = new javax.swing.JPanel();
        btnAdd = new gui.custom.RoundedButton();
        btnUpdate = new gui.custom.RoundedButton();
        btnSearch = new gui.custom.RoundedButton();
        btnSearch1 = new gui.custom.RoundedButton();
        lblName1 = new javax.swing.JLabel();
        cbbFloor = new javax.swing.JComboBox<>();
        panelTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        panelInfo.setLayout(new java.awt.BorderLayout());

        lblImgTbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-table-100.png"))); // NOI18N

        javax.swing.GroupLayout panelImgTblLayout = new javax.swing.GroupLayout(panelImgTbl);
        panelImgTbl.setLayout(panelImgTblLayout);
        panelImgTblLayout.setHorizontalGroup(
            panelImgTblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImgTblLayout.createSequentialGroup()
                .addContainerGap(813, Short.MAX_VALUE)
                .addComponent(lblImgTbl)
                .addContainerGap(814, Short.MAX_VALUE))
        );
        panelImgTblLayout.setVerticalGroup(
            panelImgTblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImgTblLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(lblImgTbl, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelInfo.add(panelImgTbl, java.awt.BorderLayout.NORTH);

        lblName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblName.setText("Số bàn");
        lblName.setPreferredSize(new java.awt.Dimension(100, 20));

        lblSpace.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblSpace.setText("Sức chứa");
        lblSpace.setPreferredSize(new java.awt.Dimension(100, 20));

        txtCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCapacityActionPerformed(evt);
            }
        });

        btnAdd.setText("Thêm");
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAdd.setPreferredSize(new java.awt.Dimension(100, 50));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnAddActionPerformed(evt);
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });
        panelEdit.add(btnAdd);

        btnUpdate.setText("Cập nhật");
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnUpdate.setPreferredSize(new java.awt.Dimension(150, 50));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnUpdateActionPerformed(evt);
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });
        panelEdit.add(btnUpdate);

        btnSearch.setText("Tìm kiếm");
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSearch.setPreferredSize(new java.awt.Dimension(150, 50));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnSearchActionPerformed(evt);
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });
        panelEdit.add(btnSearch);

        btnSearch1.setText("Xóa trắng");
        btnSearch1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSearch1.setPreferredSize(new java.awt.Dimension(150, 50));
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });
        panelEdit.add(btnSearch1);

        lblName1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblName1.setText("Lầu");
        lblName1.setPreferredSize(new java.awt.Dimension(100, 20));

        javax.swing.GroupLayout panelDetailInfoLayout = new javax.swing.GroupLayout(panelDetailInfo);
        panelDetailInfo.setLayout(panelDetailInfoLayout);
        panelDetailInfoLayout.setHorizontalGroup(
            panelDetailInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetailInfoLayout.createSequentialGroup()
                .addContainerGap(520, Short.MAX_VALUE)
                .addComponent(lblSpace, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(panelDetailInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDetailInfoLayout.createSequentialGroup()
                        .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbFloor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelDetailInfoLayout.createSequentialGroup()
                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(520, Short.MAX_VALUE))
            .addGroup(panelDetailInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelDetailInfoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 1715, Short.MAX_VALUE)))
        );
        panelDetailInfoLayout.setVerticalGroup(
            panelDetailInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetailInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDetailInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelDetailInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDetailInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSpace, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDetailInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblName1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(cbbFloor))
                .addContainerGap(167, Short.MAX_VALUE))
            .addGroup(panelDetailInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelDetailInfoLayout.createSequentialGroup()
                    .addGap(201, 201, 201)
                    .addComponent(panelEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        panelInfo.add(panelDetailInfo, java.awt.BorderLayout.CENTER);

        add(panelInfo, java.awt.BorderLayout.NORTH);

        customTable();
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout panelTableLayout = new javax.swing.GroupLayout(panelTable);
        panelTable.setLayout(panelTableLayout);
        panelTableLayout.setHorizontalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1727, Short.MAX_VALUE)
            .addGroup(panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelTableLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1703, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelTableLayout.setVerticalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 107, Short.MAX_VALUE)
            .addGroup(panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
        );

        add(panelTable, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCapacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCapacityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCapacityActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int selectedRow = table.getSelectedRow();
        if(selectedRow ==-1)
            return;
        String space = table.getValueAt(selectedRow, 3).toString();
        String name = table.getValueAt(selectedRow, 2).toString();
        txtCapacity.setText(space);
        txtName.setText(name);
    }//GEN-LAST:event_tableMouseClicked

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        clear();
    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnAddActionPerformed
        TableEntity tableNew = getTable();
        tableBUS.insertEntity(tableNew);
        addOneLine(tableNew);
        JOptionPane.showMessageDialog(this, "Thêm thành công");
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnUpdateActionPerformed
        int row = table.getSelectedRow();
        if (row == -1) {
            return;
        }
        
        tbl = tableBUS.getEntityById(table.getValueAt(row, 0).toString());
        
        tbl.setCapacity(Integer.parseInt(txtCapacity.getText()));
        tbl.setName(txtName.getText());
        tbl.setFloor(floorBUS.findByName(cbbFloor.getSelectedItem().toString()));
        
        tableBUS.updateEntity(tbl);
        
        int selectedRow = table.getSelectedRow();
        if (selectedRow != -1) { 
            tableModel.setValueAt(tbl.getFloor().getFloorId(), selectedRow, 1);
            tableModel.setValueAt(tbl.getName(), selectedRow, 2);
            tableModel.setValueAt(tbl.getCapacity(), selectedRow, 3);
            JOptionPane.showMessageDialog(null, "Cập nhật thành công");
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn một hàng để cập nhật");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnSearchActionPerformed
        int Capacity = 0;
        try {
            String capacityText = txtCapacity.getText().trim();
            if (!capacityText.isEmpty()) {
                Capacity = Integer.parseInt(capacityText);
            }
        } catch (NumberFormatException e) {
           
            JOptionPane.showMessageDialog(this, "Vui lòng nhập một giá trị hợp lệ cho Capacity.");
            return;
        }
        String Name = txtName.getText();
        FloorEntity floor = floorBUS.findByName(cbbFloor.getSelectedItem().toString());
        
        tableModel.setRowCount(0);
        List<TableEntity> tbls = tableBUS.getTablesWithKeyword(floor.getFloorId(), Capacity, Name);
        if(tbls.isEmpty()) {
            tbls = tableBUS.getAllEntities();
        }
        for(TableEntity tbl : tbls) {
            addOneLine(tbl);
        }
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.custom.RoundedButton btnAdd;
    private gui.custom.RoundedButton btnSearch;
    private gui.custom.RoundedButton btnSearch1;
    private gui.custom.RoundedButton btnUpdate;
    private javax.swing.JComboBox<String> cbbFloor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImgTbl;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblSpace;
    private javax.swing.JPanel panelDetailInfo;
    private javax.swing.JPanel panelEdit;
    private javax.swing.JPanel panelImgTbl;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel panelTable;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
