/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.manager;

import bus.impl.OrderBUSImpl;
import common.Constants;
import gui.FormLoad;
import gui.custom.chart.Chart;
import gui.custom.chart.ModelChart;
import gui.custom.curvechart.CurveChart;
import gui.custom.curvechart.ModelChart2;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JPanel;
import util.DoubleFormatUlti;

/**
 *
 * @author ADMIN
 */
public class FrequencyStatsGUI extends javax.swing.JPanel {

    /**
     * Creates new form FrequencyStatsGUI
     */
    private OrderBUSImpl orderBUSImpl;

    public FrequencyStatsGUI() {
        orderBUSImpl = FormLoad.orderBUSImpl;
        initComponents();
        setTextForReservation(LocalDate.now().atStartOfDay(), LocalDate.now().atTime(23, 59, 59, 999999999));
        createChartByHours(LocalDate.now().atStartOfDay(), LocalDate.now().atTime(23, 59, 59, 999999999), statsByHours);
        createChartByOrderType(LocalDate.now().atStartOfDay(), LocalDate.now().atTime(23, 59, 59, 999999999), statsByHours1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        north = new javax.swing.JPanel();
        mainNorth = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        lblQtyAll = new javax.swing.JLabel();
        lblRevenueAll = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        lblQtyOff = new javax.swing.JLabel();
        lblRevenueOff = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        lblQtyOnl = new javax.swing.JLabel();
        lblRevenueOnl = new javax.swing.JLabel();
        southNorth = new javax.swing.JPanel();
        center = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        comboHours = new javax.swing.JComboBox<>();
        statsByHours = new javax.swing.JPanel();
        chart1 = new gui.custom.chart.Chart();
        south = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cboCurve = new javax.swing.JComboBox<>();
        statsByHours1 = new javax.swing.JPanel();
        chart2 = new gui.custom.chart.Chart();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(244, 248, 254));
        setLayout(new java.awt.BorderLayout());

        main.setBackground(new java.awt.Color(244, 248, 254));
        main.setLayout(new java.awt.BorderLayout());

        north.setBackground(new java.awt.Color(244, 248, 254));
        north.setPreferredSize(new java.awt.Dimension(1530, 200));
        north.setLayout(new java.awt.BorderLayout());

        mainNorth.setBackground(new java.awt.Color(244, 248, 254));
        mainNorth.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(244, 248, 254));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setText("   KẾT QUẢ ĐẶT BÀN HÔM NAY");
        jPanel1.add(jLabel1, java.awt.BorderLayout.CENTER);

        mainNorth.add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel6.setBackground(new java.awt.Color(244, 248, 254));
        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 10));

        jPanel7.setLayout(new java.awt.BorderLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-moneyREd-75 (2).png"))); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addGap(10, 10, 10))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jPanel7.add(jPanel8, java.awt.BorderLayout.WEST);

        jPanel9.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(204, 204, 204)));

        lblQtyAll.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblQtyAll.setText("3 đơn đã phục vụ");

        lblRevenueAll.setBackground(new java.awt.Color(255, 102, 102));
        lblRevenueAll.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        lblRevenueAll.setForeground(new java.awt.Color(255, 102, 102));
        lblRevenueAll.setText("1000000 VNĐ");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQtyAll)
                    .addComponent(lblRevenueAll))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblQtyAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRevenueAll)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel7);

        jPanel16.setLayout(new java.awt.BorderLayout());

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-wacom-tabletNew-75 (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel11)
                .addGap(10, 10, 10))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jPanel16.add(jPanel17, java.awt.BorderLayout.WEST);

        jPanel18.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(204, 204, 204)));

        lblQtyOff.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblQtyOff.setText("3 đơn đặt trực tiếp");

        lblRevenueOff.setBackground(new java.awt.Color(255, 102, 102));
        lblRevenueOff.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        lblRevenueOff.setForeground(new java.awt.Color(51, 153, 0));
        lblRevenueOff.setText("1000000 VNĐ");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQtyOff)
                    .addComponent(lblRevenueOff))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblQtyOff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRevenueOff)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel16.add(jPanel18, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel16);

        jPanel19.setLayout(new java.awt.BorderLayout());

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-ringing-phone-75.png"))); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel14)
                .addGap(10, 10, 10))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jPanel19.add(jPanel20, java.awt.BorderLayout.WEST);

        jPanel21.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(204, 204, 204)));

        lblQtyOnl.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblQtyOnl.setText("3 đơn đặt trực tuyến");

        lblRevenueOnl.setBackground(new java.awt.Color(255, 102, 102));
        lblRevenueOnl.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        lblRevenueOnl.setForeground(new java.awt.Color(88, 136, 244));
        lblRevenueOnl.setText("1000000 VNĐ");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQtyOnl)
                    .addComponent(lblRevenueOnl))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblQtyOnl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRevenueOnl)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel19.add(jPanel21, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel19);

        mainNorth.add(jPanel6, java.awt.BorderLayout.CENTER);

        north.add(mainNorth, java.awt.BorderLayout.CENTER);

        southNorth.setBackground(new java.awt.Color(244, 248, 254));
        southNorth.setPreferredSize(new java.awt.Dimension(1530, 20));

        javax.swing.GroupLayout southNorthLayout = new javax.swing.GroupLayout(southNorth);
        southNorth.setLayout(southNorthLayout);
        southNorthLayout.setHorizontalGroup(
            southNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        southNorthLayout.setVerticalGroup(
            southNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        north.add(southNorth, java.awt.BorderLayout.SOUTH);

        main.add(north, java.awt.BorderLayout.NORTH);

        center.setBackground(new java.awt.Color(244, 248, 254));
        center.setLayout(new java.awt.BorderLayout());

        jPanel10.setBackground(new java.awt.Color(244, 248, 254));
        jPanel10.setLayout(new java.awt.BorderLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel5.setText("   THỐNG KÊ TẦN SUẤT ĐẶT BÀN THEO GIỜ");
        jPanel10.add(jLabel5, java.awt.BorderLayout.CENTER);

        comboHours.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        comboHours.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hôm nay", "Hôm trước", "7 ngày trước", "30 ngày trước", "Năm nay", "Năm trước" }));
        comboHours.setPreferredSize(new java.awt.Dimension(200, 40));
        comboHours.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboHoursItemStateChanged(evt);
            }
        });
        jPanel10.add(comboHours, java.awt.BorderLayout.EAST);

        center.add(jPanel10, java.awt.BorderLayout.NORTH);

        statsByHours.setLayout(new java.awt.BorderLayout());
        statsByHours.add(chart1, java.awt.BorderLayout.CENTER);

        center.add(statsByHours, java.awt.BorderLayout.CENTER);

        main.add(center, java.awt.BorderLayout.CENTER);

        south.setLayout(new java.awt.BorderLayout());

        jPanel11.setBackground(new java.awt.Color(244, 248, 254));
        jPanel11.setLayout(new java.awt.BorderLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel6.setText("   THỐNG KÊ TẦN SUẤT ĐẶT BÀN THEO LOẠI ĐƠN ĐẶT");
        jLabel6.setRequestFocusEnabled(false);
        jPanel11.add(jLabel6, java.awt.BorderLayout.CENTER);

        cboCurve.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        cboCurve.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hôm nay", "Hôm trước", "7 ngày trước", "30 ngày trước", "Năm nay", "Năm trước" }));
        cboCurve.setPreferredSize(new java.awt.Dimension(200, 40));
        cboCurve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCurveActionPerformed(evt);
            }
        });
        jPanel11.add(cboCurve, java.awt.BorderLayout.EAST);

        south.add(jPanel11, java.awt.BorderLayout.NORTH);

        statsByHours1.setLayout(new java.awt.BorderLayout());
        statsByHours1.add(chart2, java.awt.BorderLayout.CENTER);

        south.add(statsByHours1, java.awt.BorderLayout.CENTER);

        main.add(south, java.awt.BorderLayout.SOUTH);

        add(main, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(244, 248, 254));
        jPanel2.setPreferredSize(new java.awt.Dimension(1570, 20));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1570, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setBackground(new java.awt.Color(244, 248, 254));
        jPanel3.setPreferredSize(new java.awt.Dimension(1570, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1530, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        add(jPanel3, java.awt.BorderLayout.SOUTH);

        jPanel4.setBackground(new java.awt.Color(244, 248, 254));
        jPanel4.setPreferredSize(new java.awt.Dimension(20, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        add(jPanel4, java.awt.BorderLayout.WEST);

        jPanel5.setBackground(new java.awt.Color(244, 248, 254));
        jPanel5.setPreferredSize(new java.awt.Dimension(20, 819));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 839, Short.MAX_VALUE)
        );

        add(jPanel5, java.awt.BorderLayout.EAST);
    }// </editor-fold>//GEN-END:initComponents

    private void comboHoursItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboHoursItemStateChanged
        String selectedItem = comboHours.getSelectedItem().toString();
        if (selectedItem.equals("Năm nay")) {
            LocalDate localDateStart = LocalDate.of(LocalDate.now().getYear(), 1, 1);
            LocalDate localDateEnd = LocalDate.of(LocalDate.now().getYear(), 12, 31);
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            setTextForReservation(start, end);
            createChartByHours(start, end, statsByHours);
        } else if (selectedItem.equals("Năm trước")) {
            LocalDate localDateStart = LocalDate.of(LocalDate.now().getYear() - 1, 1, 1);
            LocalDate localDateEnd = LocalDate.of(LocalDate.now().getYear() - 1, 12, 31);
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            setTextForReservation(start, end);
            createChartByHours(start, end, statsByHours);

        } else if (selectedItem.equals("Hôm nay")) {
            LocalDate localDateStart = LocalDate.now();
            LocalDate localDateEnd = LocalDate.now();
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            setTextForReservation(start, end);
            createChartByHours(start, end, statsByHours);
        } else if (selectedItem.equals("Hôm trước")) {
            LocalDate localDateStart = LocalDate.now().minusDays(1);
            LocalDate localDateEnd = LocalDate.now().minusDays(1);
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            setTextForReservation(start, end);
            createChartByHours(start, end, statsByHours);

        } else if (selectedItem.equals("7 ngày trước")) {
            LocalDate localDateStart = LocalDate.now().minusDays(7);
            LocalDate localDateEnd = LocalDate.now();
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            setTextForReservation(start, end);
            createChartByHours(start, end, statsByHours);
        } else if (selectedItem.equals("30 ngày trước")) {
            LocalDate localDateStart = LocalDate.now().minusDays(30);
            LocalDate localDateEnd = LocalDate.now();
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            setTextForReservation(start, end);
            createChartByHours(start, end, statsByHours);
        }
    }//GEN-LAST:event_comboHoursItemStateChanged

    private void cboCurveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCurveActionPerformed
        String selectedItem = cboCurve.getSelectedItem().toString();
        if (selectedItem.equals("Năm nay")) {
            LocalDate localDateStart = LocalDate.of(LocalDate.now().getYear(), 1, 1);
            LocalDate localDateEnd = LocalDate.of(LocalDate.now().getYear(), 12, 31);
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            createChartByOrderType(start, end, statsByHours1);
        } else if (selectedItem.equals("Năm trước")) {
            LocalDate localDateStart = LocalDate.of(LocalDate.now().getYear() - 1, 1, 1);
            LocalDate localDateEnd = LocalDate.of(LocalDate.now().getYear() - 1, 12, 31);
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            setTextForReservation(start, end);
            createChartByOrderType(start, end, statsByHours1);

        } else if (selectedItem.equals("Hôm nay")) {
            LocalDate localDateStart = LocalDate.now();
            LocalDate localDateEnd = LocalDate.now();
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            createChartByOrderType(start, end, statsByHours1);
        } else if (selectedItem.equals("Hôm trước")) {
            LocalDate localDateStart = LocalDate.now().minusDays(1);
            LocalDate localDateEnd = LocalDate.now().minusDays(1);
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            createChartByOrderType(start, end, statsByHours1);

        } else if (selectedItem.equals("7 ngày trước")) {
            LocalDate localDateStart = LocalDate.now().minusDays(7);
            LocalDate localDateEnd = LocalDate.now();
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            createChartByOrderType(start, end, statsByHours1);
        } else if (selectedItem.equals("30 ngày trước")) {
            LocalDate localDateStart = LocalDate.now().minusDays(30);
            LocalDate localDateEnd = LocalDate.now();
            LocalDateTime start = localDateStart.atStartOfDay();
            LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999);
            createChartByOrderType(start, end, statsByHours1);
        }
    }//GEN-LAST:event_cboCurveActionPerformed

    private void setTextForReservation(LocalDateTime startDate, LocalDateTime endDate) {
        lblQtyAll.setText(orderBUSImpl.getQtyFrequencyByDate(startDate, endDate, "ALL") + " đơn đã phục vụ");
        lblQtyOff.setText(orderBUSImpl.getQtyFrequencyByDate(startDate, endDate, "IMMEDIATE") + " đơn đặt trực tiếp");
        lblQtyOnl.setText(orderBUSImpl.getQtyFrequencyByDate(startDate, endDate, "ADVANCE") + " đơn đặt trực tuyến");

        lblRevenueAll.setText(DoubleFormatUlti.format(orderBUSImpl.getRevenueOfFrequencyByDate(startDate, endDate, "ALL")) + " VNĐ");
        lblRevenueOff.setText(DoubleFormatUlti.format(orderBUSImpl.getRevenueOfFrequencyByDate(startDate, endDate, "IMMEDIATE")) + " VNĐ");
        lblRevenueOnl.setText(DoubleFormatUlti.format(orderBUSImpl.getRevenueOfFrequencyByDate(startDate, endDate, "ADVANCE")) + " VNĐ");
    }

    private void createChartByHours(LocalDateTime startDate, LocalDateTime endDate, JPanel panel) {
        panel.removeAll();
        Chart chart = new Chart();
        panel.add(chart);
        updateChartByHours(chart, startDate, endDate);
        panel.repaint();
        panel.revalidate();
    }

    private void updateChartByHours(Chart chart, LocalDateTime startDate, LocalDateTime endDate) {
        chart.clear();
        chart.addLegend("Doanh Thu", Constants.COLOR_REVENUE);
        Map<String, Integer> map = orderBUSImpl.getTotalFrequencyByHours(startDate, endDate, "ALL");

        Map<String, Integer> completeMap = new TreeMap<>();

        for (int hour = 9; hour <= 21; hour++) {
            String hourStr = String.format("%02d:00", hour);
            completeMap.put(hourStr, 0);
        }

        map.forEach((hour, value) -> completeMap.put(hour, value));

        completeMap.forEach((hour, value) -> {
            chart.addData(new ModelChart(hour, new double[]{value}));
        });

        chart.start();
    }

    private void createChartByOrderType(LocalDateTime startDate, LocalDateTime endDate, JPanel panel) {
        panel.removeAll();
        CurveChart chart = new CurveChart();
        panel.add(chart);
        updateChartByOrderType(chart, startDate, endDate);
        panel.repaint();
        panel.revalidate();
    }

    private void updateChartByOrderType(CurveChart chart, LocalDateTime startDate, LocalDateTime endDate) {
        chart.clear();
        chart.addLegend("IMMEDIATE", Constants.COLOR_REVENUE, Constants.COLOR_REVENUE);
        chart.addLegend("ADVANCE", Constants.COLOR_CAPITAL, Constants.COLOR_CAPITAL);
        Map<String, Integer> map1 = orderBUSImpl.getTotalFrequencyByHours(startDate, endDate, "IMMEDIATE");
        Map<String, Integer> map2 = orderBUSImpl.getTotalFrequencyByHours(startDate, endDate, "ADVANCE");
        
        Map<String, Map<Integer, Integer>> resultMap = new TreeMap<>();

        for (int hour = 9; hour <= 21; hour++) {
            String hourStr = String.format("%02d:00", hour);

            int value1 = map1.getOrDefault(hourStr, 0);
            int value2 = map2.getOrDefault(hourStr, 0);

            Map<Integer, Integer> subMap = new HashMap<>();
            subMap.put(1, value1);
            subMap.put(2, value2);

            resultMap.put(hourStr, subMap);
        }

        resultMap.forEach((hour, values) -> {
            double immediate = values.getOrDefault(1, 0);
            double advance = values.getOrDefault(2, 0);
            chart.addData(new ModelChart2(hour, new double[]{immediate, advance}));
        });

        chart.start();

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboCurve;
    private javax.swing.JPanel center;
    private gui.custom.chart.Chart chart1;
    private gui.custom.chart.Chart chart2;
    private javax.swing.JComboBox<String> comboHours;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel lblQtyAll;
    private javax.swing.JLabel lblQtyOff;
    private javax.swing.JLabel lblQtyOnl;
    private javax.swing.JLabel lblRevenueAll;
    private javax.swing.JLabel lblRevenueOff;
    private javax.swing.JLabel lblRevenueOnl;
    private javax.swing.JPanel main;
    private javax.swing.JPanel mainNorth;
    private javax.swing.JPanel north;
    private javax.swing.JPanel south;
    private javax.swing.JPanel southNorth;
    private javax.swing.JPanel statsByHours;
    private javax.swing.JPanel statsByHours1;
    // End of variables declaration//GEN-END:variables
}
