/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.manager;

import bus.*;
import common.Constants;
import dto.ToppingDTO;
import model.*;
import gui.FormLoad;
import gui.custom.RoundedTextField;
import gui.custom.TableDesign;

import java.rmi.RemoteException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import util.*;

/**
 *
 * @author Trần Ngọc Huyền
 */
public class ToppingGUI extends javax.swing.JPanel  {

    private TableDesign tableDesign;
    private String[] headers;
    private List<Integer> tableWidth;
    private DefaultTableModel defaultTableModel;
    private TableColumnModel columnModel;
    private ToppingBUS toppingBUS;
    private ItemToppingBUS itemToppingBUS;
    private ItemBUS itemBUS;
    private DialogVoucherDetail dialog;
    private List<ItemEntity> items;
    private boolean isMouseClick = false;

    public ToppingGUI() throws RemoteException {
        this.toppingBUS = FormLoad.toppingBUS;
        this.itemToppingBUS = FormLoad.itemToppingBUS;
        this.itemBUS = FormLoad.itemBUS;
        this.items = new ArrayList<>();
        dialog = new DialogVoucherDetail(this);
        initComponents();
    }

    public List<ItemEntity> getItems() {
        return items;
    }

    public RoundedTextField getTxtItem() {
        return txtItem;
    }

    public void setTxtItem(RoundedTextField txtItem) {
        this.txtItem = txtItem;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws RemoteException {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        panelImg = new gui.custom.RoundedPanel();
        lblImg = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new gui.custom.RoundedTextField();
        jLabel9 = new javax.swing.JLabel();
        txtStockQty = new gui.custom.RoundedTextField();
        cbStatus = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtCostPrice = new gui.custom.RoundedTextField();
        jLabel8 = new javax.swing.JLabel();
        txtItem = new gui.custom.RoundedTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDesc = new gui.custom.RoundedTextArea();
        jPanel8 = new javax.swing.JPanel();
        btnAdd = new gui.custom.RoundedButton();
        btnUpdate = new gui.custom.RoundedButton();
        btnSearch = new gui.custom.RoundedButton();
        btnClear = new gui.custom.RoundedButton();
        jPanel16 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel20 = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 876));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Thông tin đồ dùng");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1063, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(628, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setBackground(Constants.COLOR_BG);
        jPanel3.setPreferredSize(new java.awt.Dimension(800, 807));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(Constants.COLOR_BG);
        jPanel4.setPreferredSize(new java.awt.Dimension(800, 368));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel9.setBackground(Constants.COLOR_BG);
        jPanel9.setPreferredSize(new java.awt.Dimension(800, 171));
        jPanel9.setLayout(new java.awt.GridLayout(1, 0));

        jPanel5.setBackground(Constants.COLOR_BG);

        panelImg.setBackground(new java.awt.Color(255, 255, 255));

        lblImg.setBackground(new java.awt.Color(204, 204, 204));
        lblImg.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblImg.setForeground(new java.awt.Color(153, 153, 153));
        lblImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg.setIcon(ResizeImage.resizeImage(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-pizza-48.png")), 100, 100));

        javax.swing.GroupLayout panelImgLayout = new javax.swing.GroupLayout(panelImg);
        panelImg.setLayout(panelImgLayout);
        panelImgLayout.setHorizontalGroup(
            panelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImg, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
        );
        panelImgLayout.setVerticalGroup(
            panelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImg, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Tên hàng");
        jLabel3.setPreferredSize(new java.awt.Dimension(80, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Tồn kho");
        jLabel4.setPreferredSize(new java.awt.Dimension(80, 40));

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Trạng thái hoạt động");
        jLabel9.setPreferredSize(new java.awt.Dimension(80, 40));

        txtStockQty.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jPanel10.setPreferredSize(new java.awt.Dimension(10, 112));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtStockQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbStatus)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtStockQty, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(5, 5, 5)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                    .addComponent(cbStatus)
                                    .addGap(8, 8, 8))))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(panelImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.add(jPanel5);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Giá vốn");
        jLabel6.setPreferredSize(new java.awt.Dimension(80, 40));

        txtCostPrice.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Sản phẩm");
        jLabel8.setPreferredSize(new java.awt.Dimension(80, 40));

        txtItem.setEditable(false);
        txtItem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtItemMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(txtCostPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCostPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel9.add(jPanel7);

        jPanel4.add(jPanel9, java.awt.BorderLayout.NORTH);

        jPanel6.setBackground(Constants.COLOR_BG);
        jPanel6.setPreferredSize(new java.awt.Dimension(800, 131));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Mô tả chi tiết");
        jLabel5.setPreferredSize(new java.awt.Dimension(80, 40));

        txtDesc.setColumns(20);
        txtDesc.setRows(5);
        txtDesc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jScrollPane2.setViewportView(txtDesc);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel8.setBackground(Constants.COLOR_BG);

        btnAdd.setText("Thêm");
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAdd.setPreferredSize(new java.awt.Dimension(100, 50));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnAddActionPerformed(evt);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
            }
        });
        jPanel8.add(btnAdd);

        btnUpdate.setText("Cập nhật");
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnUpdate.setPreferredSize(new java.awt.Dimension(150, 50));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnUpdateActionPerformed(evt);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
            }
        });
        jPanel8.add(btnUpdate);

        btnSearch.setText("Tìm kiếm");
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSearch.setPreferredSize(new java.awt.Dimension(150, 50));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnSearchActionPerformed(evt);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
            }
        });
        jPanel8.add(btnSearch);

        btnClear.setText("Xóa trắng");
        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnClear.setPreferredSize(new java.awt.Dimension(150, 50));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel8.add(btnClear);

        jPanel4.add(jPanel8, java.awt.BorderLayout.SOUTH);

        jPanel3.add(jPanel4, java.awt.BorderLayout.NORTH);

        jPanel16.setBackground(Constants.COLOR_BG);
        jPanel16.setLayout(new javax.swing.BoxLayout(jPanel16, javax.swing.BoxLayout.LINE_AXIS));

        jPanel21.setMaximumSize(new java.awt.Dimension(30, 30));
        jPanel21.setPreferredSize(new java.awt.Dimension(10, 30));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel16.add(jPanel21);

        customTable();
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    tableMouseClicked(evt);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
            }
        });
        jScrollPane3.setViewportView(table);

        jPanel16.add(jScrollPane3);

        jPanel20.setMaximumSize(new java.awt.Dimension(30, 30));
        jPanel20.setPreferredSize(new java.awt.Dimension(20, 30));

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel16.add(jPanel20);

        jPanel3.add(jPanel16, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {//GEN-FIRST:event_btnAddActionPerformed
        if (validData()) {
            ToppingDTO tmp = convertEntityFromTable();
            toppingBUS.addTopping(tmp);
            loadData(toppingBUS.getAllEntities());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {//GEN-FIRST:event_btnUpdateActionPerformed
        if (validData()) {
            ToppingDTO tmp = convertEntityFromTable();
            int row = table.getSelectedRow();
            if (row != -1) {
                String id = table.getValueAt(row, 0).toString();
                toppingBUS.updateTopping(tmp, id);
                loadData(toppingBUS.getAllEntities());
            } else {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn dòng cần cập nhật");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {//GEN-FIRST:event_btnSearchActionPerformed
        ToppingDTO tmp = convertEntityFromTable();
        loadData(toppingBUS.findTopping(tmp));
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearData();
    }//GEN-LAST:event_btnClearActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) throws RemoteException {//GEN-FIRST:event_tableMouseClicked
        int row = table.getSelectedRow();
        if (row != -1) {
            items = new ArrayList<>();
            String itemId = "";
            String name = table.getValueAt(row, 1).toString();
            String toppingId = table.getValueAt(row, 0).toString();
            ToppingEntity topping = toppingBUS.getEntityById(toppingId);
            Set<ItemToppingEntity> itemToppings = topping.getItemToppings();
            if (!itemToppings.isEmpty()) {
                StringBuilder itemCodes = new StringBuilder();
                for (ItemToppingEntity it : itemToppings) {
                    itemCodes.append(it.getItem().getItemId()).append(",");
                    items.add(it.getItem());
                }
                txtItem.setText(itemCodes.toString().substring(0, itemCodes.toString().length() - 1));
            } else {
                txtItem.setText("");
            }
            for (ItemToppingEntity x : itemToppings) {
                itemId += x.getItem().getItemId() + ",";
            }

            double costPrice = 0;
            try {
                costPrice = DoubleFormatUlti.parse(table.getValueAt(row, 2).toString());
            } catch (ParseException ex) {
                Logger.getLogger(ToppingGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            int stockQty = Integer.parseInt(table.getValueAt(row, 3).toString());

            boolean active = table.getValueAt(row, 4).toString().equals("true");
            String desc = table.getValueAt(row, 5).toString();
            isMouseClick = false;
            cbStatus.setSelected(active);
            txtName.setText(name);
            txtStockQty.setText(stockQty + "");
            txtCostPrice.setText((long) costPrice + "");
            txtDesc.setText(desc);
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dòng cần cập nhật");
        }
    }//GEN-LAST:event_tableMouseClicked

    private void txtItemMouseClicked(java.awt.event.MouseEvent evt) throws RemoteException {//GEN-FIRST:event_txtItemMouseClicked
        loadDialog();
        if (isMouseClick) {
            dialog.setVisible(true);
        }
        isMouseClick = true;
    }//GEN-LAST:event_txtItemMouseClicked

    private void customTable() throws RemoteException {
        headers = new String[]{"Mã", "Tên", "Giá vốn", "Số lượng", "Trạng thái", "Mô tả"};
        tableWidth = Arrays.asList(100, 100, 100, 100, 100, 100);
        this.tableDesign = new TableDesign(headers, tableWidth);
        table = tableDesign.getTable();
        this.defaultTableModel = tableDesign.getModelTable();
        table.setModel(defaultTableModel);
        this.columnModel = tableDesign.getColumnModel();
        table.setColumnModel(columnModel);
        loadData(toppingBUS.getAllEntities());
    }

    private void loadData(List<ToppingEntity> list) {
        defaultTableModel.setRowCount(0);
        list.forEach(t -> {
            this.defaultTableModel.addRow(new Object[]{t.getToppingId(), t.getName(), DoubleFormatUlti.format(t.getCostPrice()), t.getStockQuantity(), t.isActive(), t.getDescription()});
        });
    }

    private void loadDialog() throws RemoteException {
        dialog.getTabCategory().removeAll();
        dialog.addTabCategory();
        ReloadComponentUlti.reload(dialog.getTabCategory());
    }

    private void clearData() {
        if (items != null) {
            items.clear();
        }
        clearTextFields(txtCostPrice, txtItem, txtName, txtStockQty);
        txtDesc.setText("");
    }

    private void clearTextFields(JTextField... fields) {
        for (JTextField field : fields) {
            field.setText("");
        }
    }

    private ToppingDTO convertEntityFromTable() {
        ToppingDTO dto = new ToppingDTO();
        String name = txtName.getText();
        int stockQty = 0;
        if (!txtStockQty.getText().trim().equals("")) {
            stockQty = Integer.parseInt(txtStockQty.getText());
        }

        double costPrice = 0;
        if (!txtCostPrice.getText().trim().equals("")) {
            try {
                costPrice = DoubleFormatUlti.parse(txtCostPrice.getText().trim());
                if (costPrice == (long) costPrice) {
                    costPrice = (long) costPrice;
                }
            } catch (ParseException ex) {
                Logger.getLogger(ToppingGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        String desc = txtDesc.getText();
        boolean active = cbStatus.isSelected();
        String itemList = txtItem.getText().trim();
        List<String> tmp = List.of(itemList.split(","));

        dto.setName(name);
        dto.setStockQty(stockQty);
        dto.setCostPrice(costPrice);
        dto.setDesc(desc);
        dto.setActive(active);
        dto.setListItemIds(tmp);

        return dto;
    }

    private boolean validData() {
        String name = txtName.getText();
        String stockQtyStr = txtStockQty.getText();
        String costPriceStr = txtCostPrice.getText();

        if (name.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Tên không được để rỗng");
            return false;
        }

        int stock = 0;
        if (!stockQtyStr.trim().equals("")) {
            try {
                stock = Integer.parseInt(stockQtyStr);
                if (stock <= 0) {
                    JOptionPane.showMessageDialog(null, "Số lượng tồn kho phải là số nguyên lớn hơn 0");
                    return false;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Số lượng tồn kho phải là số");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Số lượng tồn kho không được để rỗng");
            return false;
        }

        double costPrice = 0;
        if (!costPriceStr.trim().equals("")) {
            try {
                costPrice = Double.parseDouble(costPriceStr);
                if (stock <= 0) {
                    JOptionPane.showMessageDialog(null, "Giá tiền phải là số nguyên lớn hơn 0");
                    return false;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Giá tiền phải là số");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Giá không được để rỗng");
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.custom.RoundedButton btnAdd;
    private gui.custom.RoundedButton btnClear;
    private gui.custom.RoundedButton btnSearch;
    private gui.custom.RoundedButton btnUpdate;
    private javax.swing.JCheckBox cbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblImg;
    private gui.custom.RoundedPanel panelImg;
    private javax.swing.JTable table;
    private gui.custom.RoundedTextField txtCostPrice;
    private gui.custom.RoundedTextArea txtDesc;
    private gui.custom.RoundedTextField txtItem;
    private gui.custom.RoundedTextField txtName;
    private gui.custom.RoundedTextField txtStockQty;
    // End of variables declaration//GEN-END:variables
}
