/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.staff;

import bus.impl.OrderBUSImpl;
import bus.impl.TableBUSImpl;
import common.Constants;
import model.OrderEntity;
import model.TableEntity;
import gui.FormLoad;
import gui.custom.RoundedPanel;

import java.awt.Color;
import java.awt.Font;
import java.time.LocalDateTime;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import model.enums.PaymentStatusEnum;
import model.enums.ReservationStatusEnum;
import model.enums.TableStatusEnum;
import raven.toast.Notifications;
import util.DatetimeFormatterUtil;

/**
 *
 * @author Trần Ngọc Huyền.
 */
public class PanelReservation extends RoundedPanel {

    private OrderBUSImpl orderBUSImpl;
    private TableBUSImpl tableBUSImpl;
    private PanelReservationByDate panelReservationByDate;
    private Color color;
    private MainGUI mainGUI;

    private List<TableEntity> tableEntities;

    /**
     * Creates new form PanelOrder
     */
    private OrderEntity order;

    public PanelReservation() {
        initComponents();
    }

    public PanelReservation(OrderEntity o, PanelReservationByDate p, MainGUI mainGUI) {
        UIManager.put("OptionPane.messageFont", new Font("Arial", Font.PLAIN, 13));
        this.order = o;
        this.color = getColor();
        this.mainGUI = mainGUI;
        initComponents();
        this.orderBUSImpl = FormLoad.orderBUSImpl;
        this.tableBUSImpl = FormLoad.tableBUSImpl;
        this.panelReservationByDate = p;
        setLblCusTotal();
        setLblDeposit();
        setLblNamePhone();
        setLblReservationTime();
        setLblTableName();
    }

    public OrderEntity getOrder() {
        return order;
    }

    public void setOrder(OrderEntity order) {
        this.order = order;
    }

    public JLabel getLblCusTotal() {
        return lblCusTotal;
    }

    public void setLblCusTotal() {
        this.lblCusTotal.setText(order.getNumberOfCustomer() + "");
    }

    public JLabel getLblDeposit() {
        return lblDeposit;
    }

    public void setLblDeposit() {
        this.lblDeposit.setText(order.getDeposit() + "");
    }

    public JLabel getLblNamePhone() {
        return lblNamePhone;
    }

    public void setLblNamePhone() {
        if (order.getCustomer() != null) {
            String[] name = order.getCustomer().getName().split(" ");

            this.lblNamePhone.setText(name[name.length - 1] + " - " + order.getCustomer().getPhone());
        }
    }

    public JLabel getLblReservationTime() {
        return lblReservationTime;
    }

    public void setLblReservationTime() {
        this.lblReservationTime.setText(order.getReservationTime().toLocalTime().format(DatetimeFormatterUtil.getTimeFormatter()));
    }

    public JLabel getLblTableName() {
        return lblTableName;
    }

    public void setLblTableName() {
        this.lblTableName.setText(String.format(
                "<html>%s<br>%s</html>",
                order.getTable().getFloor().getName(),
                order.getTable().getName()
        ));
    }

    public Color getColor() {
        LocalDateTime now = LocalDateTime.now();
        if (now.isBefore(this.order.getReservationTime()) && !now.plusMinutes(Constants.RESERVATION_TIMEOUT_MINUTES).isBefore(this.order.getReservationTime())) {
            return Constants.COLOR_GREEN;
        } else if (!this.order.getReservationTime().isAfter(now) && !this.order.getReservationTime().plusMinutes(Constants.RESERVATION_TIMEOUT_MINUTES).isBefore(now)) {
            return Constants.COLOR_RED;
        } else {
            return Constants.COLOR_PRIMARY;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelReservationTop = new javax.swing.JPanel();
        lblCusTotal = new javax.swing.JLabel();
        lblNamePhone = new javax.swing.JLabel();
        panelReservationMid = new javax.swing.JPanel();
        panelMidLeft = new javax.swing.JPanel();
        lblTableName = new javax.swing.JLabel();
        panelMidRight = new javax.swing.JPanel();
        panelMidRightTop = new javax.swing.JPanel();
        lblDeposit = new javax.swing.JLabel();
        panelMidRightBot = new javax.swing.JPanel();
        lblReservationTime = new javax.swing.JLabel();
        panelReservationBot = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        setMaximumSize(new java.awt.Dimension(250, 200));
        setMinimumSize(new java.awt.Dimension(250, 200));
        setPreferredSize(new java.awt.Dimension(250, 200));
        setLayout(new java.awt.BorderLayout());

        panelReservationTop.setBackground(getColor());
        panelReservationTop.setForeground(new java.awt.Color(255, 255, 255));
        panelReservationTop.setPreferredSize(new java.awt.Dimension(35, 35));

        lblCusTotal.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblCusTotal.setForeground(new java.awt.Color(255, 255, 255));
        lblCusTotal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-user-24.png"))); // NOI18N
        lblCusTotal.setText("2");

        lblNamePhone.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblNamePhone.setForeground(new java.awt.Color(255, 255, 255));
        lblNamePhone.setText("Huyền - 0964424149");

        javax.swing.GroupLayout panelReservationTopLayout = new javax.swing.GroupLayout(panelReservationTop);
        panelReservationTop.setLayout(panelReservationTopLayout);
        panelReservationTopLayout.setHorizontalGroup(
            panelReservationTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReservationTopLayout.createSequentialGroup()
                .addGap(0, 195, Short.MAX_VALUE)
                .addComponent(lblCusTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panelReservationTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelReservationTopLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblNamePhone, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(29, Short.MAX_VALUE)))
        );
        panelReservationTopLayout.setVerticalGroup(
            panelReservationTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCusTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
            .addGroup(panelReservationTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblNamePhone, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
        );

        add(panelReservationTop, java.awt.BorderLayout.NORTH);

        panelReservationMid.setBackground(new java.awt.Color(255, 255, 255));
        panelReservationMid.setPreferredSize(new java.awt.Dimension(100, 100));
        panelReservationMid.setLayout(new java.awt.GridLayout(1, 0));

        panelMidLeft.setBackground(new java.awt.Color(231, 239, 248));
        panelMidLeft.setPreferredSize(new java.awt.Dimension(50, 50));
        panelMidLeft.setLayout(new java.awt.BorderLayout());

        lblTableName.setBackground(new java.awt.Color(115, 171, 227));
        lblTableName.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTableName.setForeground(Constants.COLOR_STRONG_BLUE);
        lblTableName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTableName.setText("1");
        panelMidLeft.add(lblTableName, java.awt.BorderLayout.CENTER);

        panelReservationMid.add(panelMidLeft);

        panelMidRight.setBackground(new java.awt.Color(255, 255, 255));
        panelMidRight.setPreferredSize(new java.awt.Dimension(50, 50));
        panelMidRight.setLayout(new java.awt.GridLayout(2, 1));

        panelMidRightTop.setBackground(new java.awt.Color(255, 255, 255));
        panelMidRightTop.setPreferredSize(new java.awt.Dimension(25, 25));
        panelMidRightTop.setLayout(new java.awt.BorderLayout());

        lblDeposit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDeposit.setForeground(Constants.COLOR_STRONG_BLUE);
        lblDeposit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDeposit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-coin-24.png"))); // NOI18N
        lblDeposit.setText("500.000");
        panelMidRightTop.add(lblDeposit, java.awt.BorderLayout.CENTER);

        panelMidRight.add(panelMidRightTop);

        panelMidRightBot.setBackground(new java.awt.Color(255, 255, 255));
        panelMidRightBot.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(0, 0, 0)));
        panelMidRightBot.setLayout(new java.awt.BorderLayout());

        lblReservationTime.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblReservationTime.setForeground(Constants.COLOR_STRONG_BLUE);
        lblReservationTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReservationTime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-alarm-clock-24.png"))); // NOI18N
        lblReservationTime.setText("00:00:00");
        panelMidRightBot.add(lblReservationTime, java.awt.BorderLayout.CENTER);

        panelMidRight.add(panelMidRightBot);

        panelReservationMid.add(panelMidRight);

        add(panelReservationMid, java.awt.BorderLayout.CENTER);

        panelReservationBot.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(0, 0, 0)));
        panelReservationBot.setMaximumSize(new java.awt.Dimension(250, 35));
        panelReservationBot.setMinimumSize(new java.awt.Dimension(250, 35));
        panelReservationBot.setPreferredSize(new java.awt.Dimension(250, 35));

        jButton1.setBackground(new java.awt.Color(231, 231, 231));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(204, 204, 204));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-trash-15.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(229, 229, 229));
        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-edit-30.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(229, 229, 229));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-done-26.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelReservationBotLayout = new javax.swing.GroupLayout(panelReservationBot);
        panelReservationBot.setLayout(panelReservationBotLayout);
        panelReservationBotLayout.setHorizontalGroup(
            panelReservationBotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReservationBotLayout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelReservationBotLayout.setVerticalGroup(
            panelReservationBotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(panelReservationBotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        add(panelReservationBot, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents
    private void loadMainGUI() {
//        JPanel pnAllOrders = mainGUI.getTabOrder().getPanelAllOrders();
//        pnAllOrders.removeAll();
//        pnAllOrders.revalidate();
//        pnAllOrders.repaint();
//
//        JPanel pnTables = mainGUI.getTabTable().getPanelTables();
//        pnTables.removeAll();
//        pnTables.revalidate();
//        pnTables.repaint();
//        mainGUI.getTabOrder().loadOrders();
//        mainGUI.getTabTable().loadFloors();
//        mainGUI.revalidate();
//        mainGUI.repaint();
//        mainGUI.revalidate();
//        mainGUI.repaint();
        mainGUI.loadMainGUI();
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        List<OrderEntity> servingOrders = orderBUSImpl.getCurrentOrdersAndReservations(LocalDateTime.now(), -1);

        OrderEntity tempO = new OrderEntity();
        for (OrderEntity or : servingOrders) {
            if (or.getTable().getTableId().equals(this.order.getTable().getTableId())) {
                tempO = or;
                break;
            }
        }

        if (!this.order.getReservationTime().minusMinutes(Constants.RESERVATION_TIMEOUT_MINUTES).isAfter(LocalDateTime.now())) {
            if (tempO != null) {
                this.order.setReservationStatus(ReservationStatusEnum.RECEIVED);
                if (this.order.getReservationTime().isBefore(LocalDateTime.now().plusMinutes(Constants.RESERVATION_TIMEOUT_MINUTES))) {
                    this.order.setReservationTime(LocalDateTime.now());
                }
                this.order.getTable().setTableStatus(TableStatusEnum.OCCUPIED);

                this.order.getCombinedTables()
                        .forEach(t -> {
                            t.setTableStatus(TableStatusEnum.OCCUPIED);
                            tableBUSImpl.updateEntity(t);
                        });

                tableBUSImpl.updateEntity(this.order.getTable());
                orderBUSImpl.updateEntity(order);
                panelReservationByDate.removePanelReservation(this);
                Notifications.getInstance().show(Notifications.Type.SUCCESS, Notifications.Location.TOP_RIGHT, 3000, "Khách hàng: " + this.order.getCustomer().getName() + " - Đã nhận bàn thành công!");

                loadMainGUI();
            } else {
                JOptionPane.showMessageDialog(
                        null,
                        "Hiện tại không thể nhận bàn do bàn đang được phục vụ.",
                        "<html><b>Lỗi</b></html>",
                        JOptionPane.ERROR_MESSAGE
                );

            }
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "Không thể nhận bàn do chưa đến thời gian cho phép.",
                    "<html><b>Lỗi</b></html>",
                    JOptionPane.ERROR_MESSAGE
            );
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    public List<TableEntity> getTableEntities() {
        return tableEntities;
    }

    public void setTableEntities(List<TableEntity> tableEntities) {
        this.tableEntities = tableEntities;
    }


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new DialogAddReservation(this.panelReservationByDate.getTabReservation().getMapOfAllReservations(), this.panelReservationByDate.getTabReservation(), this.order).setVisible(true);

//        this.tableEntities.clear();
//        this.tableEntities.addAll(this.order.getListOfCombinedTable());
//        System.out.println("-------------------------------------------------");
//        List<TableEntity> tabless = order.getListOfCombinedTable();
//        if (tabless == null) {
//            tabless = new ArrayList<>();
//        }
//
//        for (TableEntity t : tabless) {
//            if (!listCombinedTables.contains(t)) {
//                combinedTables.remove(t);
//            }
//        }
//
//        for (TableEntity t : listCombinedTables) {
//            if (!tabless.contains(t)) {
//                combinedTables.add(t);
//            }
//        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa đơn đặt này?", "Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            this.order.setReservationStatus(ReservationStatusEnum.CANCELED);
            this.order.setPaymentStatus(PaymentStatusEnum.PAID);
            orderBUSImpl.updateEntity(order);
            panelReservationByDate.removePanelReservation(this);
            Notifications.getInstance().show(Notifications.Type.WARNING, Notifications.Location.TOP_RIGHT, 3000, "Đã hủy đơn đặt của khách hàng: " + this.order.getCustomer().getName());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel lblCusTotal;
    private javax.swing.JLabel lblDeposit;
    private javax.swing.JLabel lblNamePhone;
    private javax.swing.JLabel lblReservationTime;
    private javax.swing.JLabel lblTableName;
    private javax.swing.JPanel panelMidLeft;
    private javax.swing.JPanel panelMidRight;
    private javax.swing.JPanel panelMidRightBot;
    private javax.swing.JPanel panelMidRightTop;
    private javax.swing.JPanel panelReservationBot;
    private javax.swing.JPanel panelReservationMid;
    private javax.swing.JPanel panelReservationTop;
    // End of variables declaration//GEN-END:variables
}
