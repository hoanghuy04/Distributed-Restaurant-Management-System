/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.staff;

import com.formdev.flatlaf.FlatClientProperties;
import common.Constants;
import dto.CartDTO;
import dto.ItemCartDTO;
import model.ItemEntity;
import model.ItemToppingEntity;
import gui.custom.RoundedTextField;

import java.awt.Component;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import raven.toast.Notifications;

import util.*;

/**
 * @author pc.
 */
public class PanelOrderDetail extends javax.swing.JPanel {

    /**
     * Creates new form PanelOrderDetail
     */
    private int qty = 1;
    private OrderGUI orderGUI;
    private int oldQty = 0;
    private ItemCartDTO itemCartDTO;
    private CartDTO cartDTO;

    private double sellingPrice;
    private double toppingPrice;

    public PanelOrderDetail() {
        initComponents();
        setUI();
    }

    public PanelOrderDetail(ItemCartDTO itemCartDTO, OrderGUI orderGUI) {
        initComponents();
        cartDTO = orderGUI.getCartDTO();
        this.itemCartDTO = itemCartDTO;
        this.orderGUI = orderGUI;
        this.sellingPrice = itemCartDTO.getItem().getSellingPrice() * (1 - itemCartDTO.getItem().getTopDiscountPercentage());
        if (itemCartDTO.getItemTopping() != null) {
            this.toppingPrice = itemCartDTO.getItemTopping().getSellingPrice();
        } else {
            this.toppingPrice = 0;
        }
        setOpaque(false);
        fillContent();
        setUI();
    }

    private void setUI() {
        txtDescription.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Ghi chú");
    }

    public RoundedTextField getTxtDescription() {
        return txtDescription;
    }

    public void setTxtDescription(RoundedTextField txtDescription) {
        this.txtDescription = txtDescription;
    }

    public void setTxtDescription(String desc) {
        txtDescription.setText(desc);
    }

    public void setSTT(Integer stt) {
        lblSTT.setText(stt + "");
    }

    public RoundedTextField getTxtQty() {
        return txtQty;
    }

    public void setTxtQty(RoundedTextField txtQty) {
        this.txtQty = txtQty;
    }

    public ItemCartDTO getItemCartDTO() {
        return itemCartDTO;
    }

    public void setItemCartDTO(ItemCartDTO itemCartDTO) {
        this.itemCartDTO = itemCartDTO;
    }

    public int getQty() {
        return qty;
    }

    public void setQty(int qty) {
        this.qty = qty;
    }
    
    

    public void fillContent() {
        ItemEntity item = itemCartDTO.getItem();
        ItemToppingEntity itemTopping = itemCartDTO.getItemTopping();

        if (item.getTopDiscountPercentage() > 0) {
            lblSellPrice.setText(DoubleFormatUlti.format(item.getSellingPrice() + toppingPrice));
            lblDiscount.setText("-" + DoubleFormatUlti.format(item.getTopDiscountPercentage() * item.getSellingPrice()));
        } else {
            lblSellPrice.setText(DoubleFormatUlti.format(sellingPrice + toppingPrice));
            this.remove(lblDiscount);
        }
        if (itemTopping != null && !itemTopping.getTopping().getName().equals("DEFAULT_TOPPING")) {
            lblToppingName.setText("Đế " + itemTopping.getTopping().getName());
        }
        lblName.setText(FormatTextUlti.formatTextWithLineBreaks(item.getName(), 50, "left"));
        updateLineTotal();
        txtDescription.setText(itemCartDTO.getDescription());
    }

    public void updateLineTotal() {
        qty = cartDTO.getItemQty(itemCartDTO);
        txtQty.setText(qty + "");
        double lineTotal = qty * (sellingPrice + toppingPrice);
        lblLineTotal.setText(DoubleFormatUlti.format(lineTotal));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSTT = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblSellPrice = new javax.swing.JLabel();
        lblLineTotal = new javax.swing.JLabel();
        lblDiscount = new javax.swing.JLabel();
        btnPlus = new gui.custom.RoundedButton();
        btnMinus = new gui.custom.RoundedButton();
        txtQty = new RoundedTextField();
        btnDelete = new gui.custom.RoundedButton();
        txtDescription = new RoundedTextField();
        lblToppingName = new javax.swing.JLabel();

        setBackground(Constants.COLOR_BG);
        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, Constants.COLOR_BORDER));
        setMaximumSize(new java.awt.Dimension(750, 85));
        setPreferredSize(new java.awt.Dimension(740, 83));

        lblSTT.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblSTT.setForeground(Constants.COLOR_TEXT);
        lblSTT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSTT.setText("1");

        lblName.setBackground(new java.awt.Color(255, 255, 255));
        lblName.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblName.setForeground(Constants.COLOR_TEXT);
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblName.setText("Bo");
        lblName.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        lblName.setPreferredSize(new java.awt.Dimension(20, 50));

        lblSellPrice.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblSellPrice.setForeground(Constants.COLOR_TEXT);
        lblSellPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        lblLineTotal.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblLineTotal.setForeground(Constants.COLOR_TEXT);
        lblLineTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLineTotal.setMaximumSize(new java.awt.Dimension(110, 33));
        lblLineTotal.setMinimumSize(new java.awt.Dimension(110, 33));
        lblLineTotal.setPreferredSize(new java.awt.Dimension(110, 33));

        lblDiscount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDiscount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDiscount.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btnPlus.setText("+");
        btnPlus.setPreferredSize(new java.awt.Dimension(40, 40));
        btnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnPlusActionPerformed(evt);
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });

        btnMinus.setText("-");
        btnMinus.setMaximumSize(new java.awt.Dimension(50, 50));
        btnMinus.setMinimumSize(new java.awt.Dimension(50, 50));
        btnMinus.setPreferredSize(new java.awt.Dimension(40, 40));
        btnMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinusActionPerformed(evt);
            }
        });

        txtQty.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtQty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQty.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtQty.setPreferredSize(new java.awt.Dimension(30, 30));
        txtQty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQtyFocusLost(evt);
            }
        });
        txtQty.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtQtyMouseClicked(evt);
            }
        });
        txtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                txtQtyKeyReleased(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/png/icons8-trash-15.png"))); // NOI18N
        btnDelete.setPreferredSize(new java.awt.Dimension(40, 40));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtDescription.setBorder(null);
        txtDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescriptionFocusLost(evt);
            }
        });
        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                txtDescriptionKeyReleased(evt);
            }
        });

        lblToppingName.setBackground(new java.awt.Color(255, 255, 255));
        lblToppingName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblToppingName.setForeground(Constants.COLOR_GRAY);
        lblToppingName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblToppingName.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(lblSTT, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblToppingName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDiscount, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addComponent(lblSellPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addComponent(lblLineTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblToppingName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(13, 13, 13))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(lblDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(lblLineTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblSTT, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnMinusActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnMinusActionPerformed
        updateQty(-1, -1);
        orderGUI.calcPrice();
    }//GEN-LAST:event_btnMinusActionPerformed

    private void btnPlusActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnPlusActionPerformed
        updateQty(1, -1);
        orderGUI.calcPrice();
    }//GEN-LAST:event_btnPlusActionPerformed


    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteItemCart();
        orderGUI.calcPrice();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtQtyKeyReleased(KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtQtyFocusLost(null);
        }
    }//GEN-LAST:event_txtQtyKeyReleased

    private void txtQtyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtQtyMouseClicked
        if (NumberUltis.isInt(txtQty.getText())) {
            this.oldQty = Integer.parseInt(txtQty.getText());
            txtQty.setFocusable(true);
            txtQty.requestFocus();
        } else {
            qty = 1;
        }
    }//GEN-LAST:event_txtQtyMouseClicked

    private void txtDescriptionKeyReleased(KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyReleased
        cartDTO.findItem(itemCartDTO).setDescription(txtDescription.getText().trim());
    }//GEN-LAST:event_txtDescriptionKeyReleased

    private void txtQtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQtyFocusLost
        try {
            int newQty = Integer.parseInt(txtQty.getText().trim());
            if (newQty == 0) {
                if (showDeleteConfirmation()) {
                    orderGUI.removePanelOrderDetail(this);
                    fixSTT();
                    cartDTO.getCart().remove(itemCartDTO);
                } else {
                    updateQty(0, oldQty);
                    orderGUI.calcPrice();
                }
            } else {
                updateQty(0, newQty);
                orderGUI.calcPrice();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số nguyên hợp lệ!", "Lỗi nhập liệu", JOptionPane.ERROR_MESSAGE);
            txtQty.setText(String.valueOf(qty));
        }
        txtQty.setFocusable(false);
    }//GEN-LAST:event_txtQtyFocusLost

    private void txtDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescriptionFocusLost
        cartDTO.findItem(itemCartDTO).setDescription(txtDescription.getText().trim());
    }//GEN-LAST:event_txtDescriptionFocusLost

    private boolean showDeleteConfirmation() {
        int response = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xoá sản phẩm không?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        return response == JOptionPane.YES_OPTION;
    }

    private void updateQty(int delta, int newQty) {
        if (newQty != -1) {
            if (qty < 1) {
                qty = oldQty;
            } else {
                if (newQty > itemCartDTO.getItem().getStockQuantity()) {
                    Notifications.getInstance().show(
                            Notifications.Type.ERROR,
                            Notifications.Location.TOP_RIGHT,
                            10000,
                            "Không đủ số lượng tồn kho!"
                    );
                    qty = itemCartDTO.getItem().getStockQuantity();
                } else {
                    qty = Math.max(newQty, 1);
                }
            }
        } else {
            qty += delta;
            if (qty > itemCartDTO.getItem().getStockQuantity()) {
                Notifications.getInstance().show(
                        Notifications.Type.ERROR,
                        Notifications.Location.TOP_RIGHT,
                        10000,
                        "Không đủ số lượng tồn kho!"
                );
                qty = itemCartDTO.getItem().getStockQuantity();
            } else if (qty < 1) {
                deleteItemCart();
            }
        }
        cartDTO.updateQty(itemCartDTO, qty);
        updateLineTotal();
    }

    public void fixSTT() {
        int i = 0;
        for (Component comp : orderGUI.getPanelOrderDetails().getComponents()) {
            if (comp instanceof PanelOrderDetail) {
                PanelOrderDetail existingPNOD = (PanelOrderDetail) comp;
                existingPNOD.setSTT(++i);
            }
        }
    }

    private void deleteItemCart() {
        if (showDeleteConfirmation()) {
            orderGUI.removePanelOrderDetail(this);
            fixSTT();
            cartDTO.getCart().remove(itemCartDTO);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.custom.RoundedButton btnDelete;
    private gui.custom.RoundedButton btnMinus;
    private gui.custom.RoundedButton btnPlus;
    private javax.swing.JLabel lblDiscount;
    private javax.swing.JLabel lblLineTotal;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSTT;
    private javax.swing.JLabel lblSellPrice;
    private javax.swing.JLabel lblToppingName;
    private RoundedTextField txtDescription;
    private RoundedTextField txtQty;
    // End of variables declaration//GEN-END:variables
}
