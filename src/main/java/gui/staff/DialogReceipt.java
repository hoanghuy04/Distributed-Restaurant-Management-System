/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gui.staff;

import common.Constants;
import model.OrderDetailEntity;
import model.OrderEntity;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Set;
import javax.imageio.ImageIO;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

/**
 *
 * @author pc
 */
public class DialogReceipt extends javax.swing.JDialog {

    private final OrderEntity order;
    private static final DecimalFormat df = new DecimalFormat("#,###");
    private MainGUI mainGUI;

    /**
     * Creates new form DialogReceipt
     */
    public DialogReceipt(MainGUI mainGUI, OrderEntity order) {

        initComponents();
        this.mainGUI = mainGUI;
        this.order = order;

        setBackground(Color.WHITE); // Đặt màu nền là trắng
        setDefaultCloseOperation(DISPOSE_ON_CLOSE); // Đóng dialog khi nhấn nút x
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        roundedButton1 = new gui.custom.RoundedButton();
        roundedButton2 = new gui.custom.RoundedButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        int yLength = 0;
        panelDeceiptDetail = new javax.swing.JPanel(){
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2d = (Graphics2D) g;

                // Khởi tạo font và màu
                g2d.setColor(Color.BLACK);
                g2d.setFont(new Font("Serif", Font.BOLD, 22)); // Tăng thêm 2 điểm so với trước

                // Vẽ logo
                try {
                    // Tải hình ảnh từ resources
                    BufferedImage logo = ImageIO.read(getClass().getResourceAsStream("/img/icon/png/logo.png"));
                    g2d.drawImage(logo, 260, 10, null);
                } catch (IOException e) {
                    e.printStackTrace();
                }

                // Vẽ tên quán và địa chỉ
                g2d.drawString("ZENTA RESTAURANT", 200, 120);
                g2d.setFont(new Font("Serif", Font.PLAIN, 16)); // Tăng thêm 2 điểm
                g2d.drawString("Địa chỉ: 73 Nguyễn Văn Bảo, Phường 04, Gò Vấp, Hồ Chí Minh, Việt Nam", 80, 140);

                g2d.drawLine(80, 150, 500, 150);

                // Vẽ tiêu đề hóa đơn
                g2d.setFont(new Font("Serif", Font.BOLD, 20)); // Tăng thêm 2 điểm
                g2d.drawString("HÓA ĐƠN THANH TOÁN", 200, 180);

                // Vẽ thông tin hóa đơn
                g2d.setFont(new Font("Serif", Font.PLAIN, 16)); // Tăng thêm 2 điểm
                g2d.drawString("Mã HD: " + order.getOrderId(), 50, 220);
                g2d.drawString("NV: " + order.getEmployee().getFullname(), 400, 220);
                g2d.drawString("Bàn: " + order.getTable().getName(), 50, 240);
                g2d.drawString("Ngày: " + LocalDate.now(), 400, 240);
                g2d.drawString("Giờ vào: " + order.getReservationTime().format(DateTimeFormatter.ofPattern("HH:mm")), 50, 260);
                g2d.drawString("Giờ ra: " + LocalDateTime.now().format(DateTimeFormatter.ofPattern("HH:mm")), 400, 260);

                // Vẽ bảng món ăn
                int y = 280; // Khởi đầu cho bảng món
                g2d.drawString("STT", 50, y);
                g2d.drawString("Tên món", 100, y);
                g2d.drawString("SL", 300, y);
                g2d.drawString("Đơn giá", 350, y);
                g2d.drawString("Thành tiền", 450, y);

                y += 20; // Tăng y để tạo khoảng cách giữa tiêu đề bảng và các dòng
                g2d.drawLine(50, y, 550, y);
                y += 20; // Tăng y để bắt đầu vẽ món ăn

                // Lấy dữ liệu chi tiết đơn hàng và vẽ từng món
                Set<OrderDetailEntity> orderDetails = order.getOrderDetails();
                int index = 1;
                double totalAmount = 0;
                for (OrderDetailEntity detail : orderDetails) {
                    double lineTotal = detail.getLineTotal();
                    totalAmount += lineTotal;

                    g2d.drawString(String.valueOf(index), 50, y);
                    g2d.drawString(detail.getItem().getName(), 100, y);
                    g2d.drawString(String.valueOf(detail.getQuantity()), 300, y);
                    g2d.drawString(df.format(lineTotal/detail.getQuantity()), 350, y);
                    g2d.drawString(df.format(lineTotal), 450, y);
                    y += 20; // Tăng y cho từng món ăn
                    index++;
                }

                // Vẽ tổng tiền
                y += 20;
                g2d.drawLine(50, y, 550, y);
                y += 30; // Khoảng cách cho tổng tiền
                g2d.drawString("Thành tiền:", 350, y);
                g2d.drawString(df.format(order.getTotalPrice()), 450, y);

                y += 20;
                g2d.drawString("Tiền cọc:", 350, y);
                g2d.drawString(df.format(order.getDeposit()), 450, y);

                y += 20;
                g2d.drawString("Khuyến mãi:", 350, y);
                g2d.drawString(df.format(order.getTotalDiscount()), 450, y);

                y += 20;
                g2d.drawString("Tổng tiền:", 350, y);
                g2d.drawString(df.format(order.getTotalPaid()), 450, y);

                // Vẽ thông tin Wifi
                y += 50;
                g2d.drawString("Wifi: Mee House", 240, y);
                g2d.drawString("Pass: 73nguyenvanbao", 230, y + 20); // Khoảng cách cho mật khẩu wifi
                panelDeceiptDetail.setPreferredSize(new Dimension(600, y + 50));
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new Color(255, 255, 255));
        setName("Bill"); // NOI18N

        jPanel2.setBackground(new Color(255, 255, 255));

        roundedButton1.setBackground(new Color(204, 204, 204));
        roundedButton1.setForeground(new Color(102, 102, 102));
        roundedButton1.setText("Hủy");
        roundedButton1.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        roundedButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    roundedButton1ActionPerformed(evt);
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });

        roundedButton2.setBackground(Constants.COLOR_PRIMARY);
        roundedButton2.setForeground(new Color(255, 255, 255));
        roundedButton2.setText("In hóa đơn");
        roundedButton2.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        roundedButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    roundedButton2ActionPerformed(evt);
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(roundedButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roundedButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(300, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roundedButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roundedButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelDeceiptDetail.setBackground(new Color(255, 255, 255));
        panelDeceiptDetail.setMinimumSize(new Dimension(600, 500));
        panelDeceiptDetail.setPreferredSize(new Dimension(600, 500));
        jScrollPane1.setViewportView(panelDeceiptDetail);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void roundedButton1ActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_roundedButton1ActionPerformed
        mainGUI.loadMainGUI();
        this.dispose();
    }//GEN-LAST:event_roundedButton1ActionPerformed

    private void roundedButton2ActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_roundedButton2ActionPerformed
        mainGUI.loadMainGUI();
        this.dispose();
    }//GEN-LAST:event_roundedButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String[] args) {
//        // Ví dụ sử dụng OrderReceiptDialog
//        ConnectDB.connect();
//        OrderBUS ob = new OrderBUS(ConnectDB.getEntityManager());
//        // ... Thiết lập thông tin cho order ...
//        SwingUtilities.invokeLater(() -> {
//            DialogReceipt dialog = new DialogReceipt(null, ob.getEntityById("O2811240001"));
////            DialogReceipt dialog = new DialogReceipt(null, new OrderEntity());
//            dialog.setVisible(true); // Hiển thị dialog
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelDeceiptDetail;
    private gui.custom.RoundedButton roundedButton1;
    private gui.custom.RoundedButton roundedButton2;
    // End of variables declaration//GEN-END:variables
}
